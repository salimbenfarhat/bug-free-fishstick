{"version":3,"sources":["config.js","js/PostContent.js","js/Post.js","js/Posts.js","App.js","index.js"],"names":["config","PostContent","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","content","_createClass","key","value","_this2","id","window","location","href","split","pop","marked","setOptions","highlight","code","hljs","highlightAuto","NProgress","start","url","concat","fetch","then","resp","json","issue","renderContent","setState","done","htmlContent","body","toc","match","console","error","tables","map","item","level","length","title","replace","trim","forEach","index","_toc","this","handleAnchor","_jsx","className","children","_jsxs","created_at","substr","dangerouslySetInnerHTML","__html","Component","Post","apply","arguments","post","labels","label","path","Link","to","pathname","date","Posts","posts","parseInt","data","filter","number","tag","name","html_url","substring","resolveId","fetchData","postItem","App","Router","basename","Route","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a768712.chunk.js","sourcesContent":["export const config = {\r\n  // Your Github UserName\r\n  githubUserName: \"salimbenfarhat\",\r\n  // Your Github Repo Name Where You Have your issues as Blog\r\n  githubRepo: \"bug-free-fishstick\",\r\n  project: {\r\n    bugFreeFishstick: {\r\n      code: \"https://github.com/salimbenfarhat/bug-free-fishstick\",\r\n      demo: \"https://salimbenfarhat.github.io/bug-free-fishstick\",\r\n    },\r\n  },\r\n};\r\n","import hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/zenburn.css\";\r\nimport marked from \"marked\";\r\nimport NProgress from \"nprogress\";\r\nimport React, { Component } from \"react\";\r\nimport { config } from \"../config\";\r\n\r\nclass PostContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const path = window.location.href;\r\n    const id = path.split(\"/\").pop();\r\n\r\n    marked.setOptions({\r\n      highlight: (code) => hljs.highlightAuto(code).value,\r\n    });\r\n\r\n    NProgress.start();\r\n    const url = `https://api.github.com/repos/${config.githubUserName}/${config.githubRepo}/issues/${id}`;\r\n    fetch(url)\r\n      .then((resp) => resp.json())\r\n      .then((issue) => {\r\n        const content = this.renderContent(issue);\r\n        this.setState({ content: content });\r\n      });\r\n    NProgress.done();\r\n  }\r\n\r\n  handleAnchor(issue) {\r\n    // Étape 1 : Convertir le contenu Markdown en HTML en utilisant la bibliothèque \"marked\"\r\n    let htmlContent = marked(issue.body);\r\n\r\n    // Étape 2 : Extraire les titres des sections (TOC) du contenu Markdown\r\n    const toc = issue.body.match(/#{1,6}\\s(.+)/g);\r\n    if (toc === null) {\r\n      // Si aucun titre n'est trouvé, afficher un message d'erreur et retourner des valeurs par défaut\r\n      console.error(\"Aucune correspondance trouvée dans issue.body\");\r\n      return { htmlContent: \"\", tables: [] };\r\n    }\r\n\r\n    // Étape 3 : Créer un tableau d'objets représentant les titres de sections\r\n    const tables = toc.map((item) => ({\r\n      level: item.split(\"#\").length - 1, // Détermine le niveau du titre en comptant le nombre de '#'\r\n      title: item.replace(/#{1,6}/, \"\").trim(), // Extrait le texte du titre, en supprimant les '#'\r\n    }));\r\n\r\n    // Étape 4 : Remplacer les titres HTML par des titres avec ancrage (ajout d'un ID)\r\n    let tocHtml = htmlContent.match(/<(h\\d).*?>.*?<\\/h\\d>/g);\r\n    tocHtml.forEach((item, index) => {\r\n      // Crée un nouvel élément avec un ID basé sur le titre et remplace l'élément d'origine\r\n      let _toc = `<div id='${tables[index].title}'>${item} </div>`;\r\n      htmlContent = htmlContent.replace(item, _toc);\r\n    });\r\n\r\n    // Étape 5 : Retourne le contenu HTML modifié et le tableau des titres\r\n    return { htmlContent, tables };\r\n  }\r\n\r\n  renderContent(issue) {\r\n    const { htmlContent } = this.handleAnchor(issue);\r\n    return (\r\n      <div className=\"content-layout\">\r\n        <div className=\"main-container\">\r\n          <div className=\"article\">\r\n            <article className=\"article \">\r\n              <h1 className=\"article-title\">{issue.title}</h1>\r\n              <p className=\"article-time\">\r\n                {`${issue.created_at.substr(8, 2)}/${issue.created_at.substr(\r\n                  5,\r\n                  2,\r\n                )}/${issue.created_at.substr(0, 4)}`}\r\n              </p>\r\n\r\n              <div\r\n                className=\"article-desc article-content\"\r\n                dangerouslySetInnerHTML={{ __html: htmlContent }}\r\n              />\r\n            </article>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return <div>{this.state.content}</div>;\r\n  }\r\n}\r\n\r\nexport default PostContent;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Post extends Component {\r\n  render() {\r\n    const post = this.props.post;\r\n    let labels = post.labels.map((label) => (\r\n      <span key={label} className=\"list-label\">\r\n        {label}\r\n      </span>\r\n    ));\r\n    let path = \"/post/\" + post.id;\r\n    return (\r\n      <li className=\"list-post\">\r\n        <div>\r\n          <Link to={{ pathname: path }}>{post.title}</Link>\r\n        </div>\r\n        <span className=\"date-long\">{post.date}</span>\r\n        {labels}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import NProgress from \"nprogress\";\r\nimport React, { Component } from \"react\";\r\nimport { config } from \"../config\";\r\nimport Post from \"./Post.js\";\r\nclass Posts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { posts: [] };\r\n  }\r\n\r\n  resolveId(location) {\r\n    return parseInt(location.pathname.split(\"/\").pop());\r\n  }\r\n\r\n  fetchData() {\r\n    const url = `https://api.github.com/repos/${config.githubUserName}/${config.githubRepo}/issues`;\r\n    fetch(url)\r\n      .then((resp) => {\r\n        return resp.json();\r\n      })\r\n      .then((data) => {\r\n        const posts = data\r\n          .filter((item) => item.state === \"open\")\r\n          .map((item) => {\r\n            return {\r\n              id: item.number,\r\n              title: item.title,\r\n              labels: item.labels.map((tag) => tag.name),\r\n              url: item.html_url,\r\n              date: item.created_at.substring(0, 10),\r\n            };\r\n          });\r\n        this.setState({ posts: posts });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.id = this.resolveId(this.props.location);\r\n    NProgress.start();\r\n    this.fetchData();\r\n    NProgress.done();\r\n  }\r\n\r\n  render() {\r\n    const postItem = this.state.posts.map((post) => (\r\n      <Post key={post.id} post={post} />\r\n    ));\r\n    return (\r\n      <div className=\"list\">\r\n        <ul>{postItem}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n","import \"nprogress/nprogress.css\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport \"./css/index.css\";\nimport \"./css/list.css\";\nimport \"./css/post.css\";\nimport \"./css/reset.css\";\nimport PostContent from \"./js/PostContent.js\";\nimport Posts from \"./js/Posts.js\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router basename=\"/bug-free-fishstick\">\n        <div>\n          <div className=\"navbar\">\n            <Link to=\"/\">Posts</Link>\n          </div>\n          <Route path=\"/post/:id\" component={PostContent} />\n          {/* <Redirect from=\"posts/:id\" to=\"/posts/:id\" /> */}\n          <Route exact path=\"/\" component={Posts} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}